name: Deploy

on:
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:

defaults:
  run:
    shell: bash -exuo pipefail {0}

env:
  CONFIG_CONNECTOR_VERSION: 1.109.0
  GCP_SERVICE_ACCOUNT: infrastructure@arikkfir.iam.gserviceaccount.com
  GCP_WORKLOAD_IDENTITY_PROVIDER: projects/8909046976/locations/global/workloadIdentityPools/github-actions/providers/github-oidc
  GCP_CLI_VERSION: 452.0.1
  TERRAFORM_VERSION: 1.5.7
  TF_IN_AUTOMATION: true
  TF_VAR_gcp_project_id: arikkfir
  TF_VAR_gcp_region: me-west1

concurrency:
  group: production
  cancel-in-progress: true

jobs:

  plan-terraform:
    name: Plan Terraform
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          version: ${{ env.GCP_CLI_VERSION }}
      - run: terraform fmt -check -recursive -no-color -diff
      - run: terraform init -input=false
      - run: terraform plan -input=false -lock-timeout=20m -out tfplan
      - run: tar -c -j -v -f tfplan.tar.bz2 .terraform .terraform.lock.hcl *.tf tfplan
      - uses: actions/upload-artifact@v4
        with:
          name: plan
          path: tfplan.tar.bz2
          if-no-files-found: error
          retention-days: 1

  apply-terraform:
    name: Apply Terraform
    needs: plan-terraform
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    environment: production
    permissions:
      id-token: write
    outputs:
      config_connector_sa_email: ${{ steps.out.outputs.config_connector_sa_email }}
      gcp_region: ${{ steps.out.outputs.gcp_region }}
      main_gke_cluster_name: ${{ steps.out.outputs.main_gke_cluster_name }}
      main_gke_cluster_location: ${{ steps.out.outputs.main_gke_cluster_location }}
    steps:
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false
      - uses: actions/download-artifact@v4
        with:
          name: plan
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: gke-gcloud-auth-plugin
          version: ${{ env.GCP_CLI_VERSION }}
      - run: tar -x -j -v -f tfplan.tar.bz2
      - run: terraform apply -input=false -lock-timeout=120s -auto-approve tfplan
      - id: out
        run: |
          echo "config_connector_sa_email=$(terraform output -raw config-connector-service-account-email)" >> "$GITHUB_OUTPUT"
          echo "gcp_region=$(terraform output -raw gcp_region)" >> "$GITHUB_OUTPUT"
          echo "main_gke_cluster_name=$(terraform output -raw main-gke-cluster-name)" >> "$GITHUB_OUTPUT"
          echo "main_gke_cluster_location=$(terraform output -raw main-gke-cluster-location)" >> "$GITHUB_OUTPUT"

  install-config-connector:
    name: Install ConfigConnector
    needs: apply-terraform
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          version: ${{ env.GCP_CLI_VERSION }}
      - uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ needs.apply-terraform.outputs.main_gke_cluster_name }}
          location: ${{ needs.apply-terraform.outputs.main_gke_cluster_location }}
      - run: |
          gsutil cp gs://configconnector-operator/${CONFIG_CONNECTOR_VERSION}/release-bundle.tar.gz - \
            | tar xzvf - --to-stdout ./operator-system/configconnector-operator.yaml \
            | kubectl apply -f -
      - run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: core.cnrm.cloud.google.com/v1beta1
          kind: ConfigConnector
          metadata:
            name: configconnector.core.cnrm.cloud.google.com
          spec:
            mode: cluster
            googleServiceAccount: config-connector@arikkfir.iam.gserviceaccount.com
          EOF
          kubectl wait -n configconnector-operator-system --for=condition=Ready pod --all

#  sync-delivery-repository:
#    name: Sync "delivery" repository
#    needs: apply-terraform
#    uses: arikkfir/delivery/.github/workflows/sync-gke-cluster-info.yml@main
#    with:
#      gke_cluster_name: ${{ needs.apply-terraform.outputs.main_gke_cluster_name }}
#      gke_cluster_location: ${{ needs.apply-terraform.outputs.main_gke_cluster_location }}
#      gke_ingress_region: ${{ needs.apply-terraform.outputs.gcp_region }}
#    secrets: inherit
#
#  apply-fluxcd:
#    name: Apply FluxCD
#    needs: [ apply-terraform, sync-delivery-repository ]
#    uses: arikkfir/delivery/.github/workflows/apply-fluxcd.yml@main
#    with:
#      gke_cluster_name: ${{ needs.apply-terraform.outputs.main_gke_cluster_name }}
#      gke_cluster_location: ${{ needs.apply-terraform.outputs.main_gke_cluster_location }}
#    secrets: inherit
